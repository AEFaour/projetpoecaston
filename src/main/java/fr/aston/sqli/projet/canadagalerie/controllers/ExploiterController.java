package fr.aston.sqli.projet.canadagalerie.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import fr.aston.sqli.projet.canadagalerie.models.sql.Exploiter;
import fr.aston.sqli.projet.canadagalerie.services.ExploiterService;

@RestController
public class ExploiterController {
	
	@Autowired
	public ExploiterService exploiterService;
	
	@RequestMapping(value = "/api/exploiters", method = RequestMethod.GET)
	public ResponseEntity<?> findAllExlpoiters(){
		try {
			return ResponseEntity.ok().body(exploiterService.findAll());
		} catch (Exception e) {
			return ResponseEntity.badRequest().body("{'msg': 'probleme'}");
		}
		
	}
	
	@RequestMapping(value = "/api/exploiters/{id}", method = RequestMethod.GET)
	public ResponseEntity<?> getExploiterById(@PathVariable Long id) {
		try {
			return ResponseEntity.ok().body(exploiterService.findById(id));
		} catch (Exception e) {
			return ResponseEntity.badRequest().body("{'msg': 'probleme'}");
		}
	}
	
	@RequestMapping(value = "/api/exploiters/exploiter/{email}", method = RequestMethod.GET)
	public ResponseEntity<?> getExploiterByEmail(@PathVariable("email") String email) {
		try {
			return ResponseEntity.ok().body(this.exploiterService.findByEmail(email));
		} catch (Exception e) {
			return ResponseEntity.badRequest().body("{'msg': 'probleme'}");
		}
		
	}
	
	@RequestMapping(value = "/api/exploiters", method = RequestMethod.POST)
	public ResponseEntity<?> addOrUpdateExploiter(@RequestBody Exploiter exploiter) {
//		if(getExploiterByEmail(exploiter.getEmail()) == null)
//		{
		try {
			this.exploiterService.saveOrUpdate(exploiter);
			return ResponseEntity.ok().body(exploiter.getId()) ;
		} catch (Exception e) {
			return ResponseEntity.badRequest().body(-1L);
		}
		
			
//		}
//		return -1L;
	}
	
	@RequestMapping(value = "/api/exploiters/{id}", method = RequestMethod.DELETE)
	public ResponseEntity<?> deleteExploiter(@PathVariable Long id) throws Exception {
		try {
			this.exploiterService.deleteExploiterById(id);
			return ResponseEntity.ok().body("La personne a été supprimée");
		} catch (Exception e) {
			return ResponseEntity.badRequest().body("{'msg': 'probleme'}");
		}
		
	}
	
}
